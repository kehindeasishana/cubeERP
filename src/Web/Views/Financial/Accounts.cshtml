@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Core.Domain.Financials.Account>
@*@model IPagedList<Web.Models.ViewModels.Financials.Accounts>*@


@{
    ViewBag.Title = "Accounts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div>
@*@using(Html.BeginForm("Accounts", "Financial", FormMethod.Get)) {*@
@using (Html.BeginForm())
{
    <div class="panel panel-default panel-body">

        <h3>Account Category Search</h3>
        <p>
            Search by Keywords :
            <input type="text" name="keyword" required value="@ViewBag.Keyword" placeholder="Account Name or Account Category or Account Code"/>
            <input type="submit" value="Search" />
          
        </p>

       
            @*<label class="col-md-2 control-label">Name:</label>

            <input type="text" name="Name" class="col-md-2" id="email">
            <label class="col-md-2 control-label">Code:</label>

            <input type="text" name="Code" class="col-md-2" id="email">
            <label class="col-md-2 control-label">Category:</label>
            <select class="col-md-2"name="category">
                <option>Select Category</option>
                <option>Current Asset</option>
                <option>Fixed Asset</option>
            </select>*@
        @*<div class="form-group">
            Find by Name: @Html.TextBox("SearchName")<br />
            Find by Code: @Html.TextBox("SearchCode")<br />
            Find by Category: @Html.TextBox("SearchCategory")<br />

        </div>*@

        <br />
        @*<input type="submit" value="Search" />*@
        @*<button class="btn btn-primary" value="search"> Search</button>*@
    </div> 
}
    </div>
<h2>Charts of Account</h2>

@Html.ActionLink("Add Account", "AddAccount")

<table class="table">

    <th>
        @Html.ActionLink("Account Code", "Accounts", new
   {
       sortOn
           = "AccountCode",
       orderBy = ViewBag.OrderBy,
       pSortOn = ViewBag.SortOn,
       keyword =
           ViewBag.Keyword
   })
</th>
<th>
    @Html.ActionLink("Account Name", "Accounts", new
           {
               sortOn
                   = "AccountName",
               orderBy = ViewBag.OrderBy,
               pSortOn = ViewBag.SortOn,
               keyword =
                   ViewBag.Keyword
           })
</th>
<th>
    @Html.ActionLink("Account Category", "Accounts", new
           {
               sortOn =
                   "AccountCategory",
               orderBy = ViewBag.OrderBy,
               pSortOn = ViewBag.SortOn,
               keyword =
                   ViewBag.Keyword
           })
</th>
    <th>Balance</th>
    @*<thead>
        <tr>
            <td>Account Code</td>
            <td>Account Name</td>
            <td>Balance</td>
            <td>Debit</td>
            <td>Credit</td>
        </tr>
    </thead>*@
    <tbody>
        @foreach (var account in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelitem => account.AccountCode)
            </td>
                <td>@Html.DisplayFor(modelitem => account.AccountName)</td>
                <td>@Html.DisplayFor(modelitem=> account.AccountClass.Name)</td>
                <td>@Html.DisplayFor(modelitem => account.Balance)</td>
            </tr>
        }
        @*@foreach (var account in Model.AccountsListLines)
        {
            <tr>
                <td>@Html.ActionLink((string)string.Format("{0}", account.AccountCode), "EditAccount", new { id = account.Id })</td>
                <td>@account.AccountName</td>
                <td>@account.Balance</td>
                <td>@account.DebitBalance</td>
                <td>@account.CreditBalance</td>
            </tr>
        }*@
    </tbody>
</table>

        <div class="pagedList">
            @Html.PagedListPager(Model, page => Url.Action("Accounts", new
            {
            page,
            sortOn = ViewBag.SortOn,
            orderBy = ViewBag.OrderBy,
            pSortOn =
                ViewBag.SortOn,
            keyword = ViewBag.Keyword
            }),
        PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
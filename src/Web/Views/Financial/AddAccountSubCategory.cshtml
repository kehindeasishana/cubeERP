@model Core.Domain.Financials.AccountSubCategory

@{
    ViewBag.Title = "AddAccountSubCategory";
}

<h2>Add Account Sub Category</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="panel panel-default panel-body ">
            <div class="form-group">
                <label class="col-md-4 control-label">Account SubCategory Name</label>
               
                @Html.EditorFor(model => model.AccountSubCategoryName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="form-group">
                <label class="col-md-4 control-label">Account Category</label>
                <input type="text" name="AccountName" />
               
            </div>
            <div class="form-group">
                <label class="col-md-4 control-label">Account Class</label>

                @Html.DropDownListFor(m => m.AccountClass, ListHelper.GetAccountClassList())
            </div>
            <div class="form-group">
                <label class="col-md-4 control-label">Account Category</label>
                @Html.TextAreaFor(m => m.Description)

            </div>

            <div>
                <input type="submit" value="Create" name="Create" />
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.AccountSubCategoryName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.AccountSubCategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountSubCategoryName, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.AccountId, "Account Type", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.DropDownList("AccountId", Web.Models.ListHelper.GetAccountClassList(), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.AccountId, "Account Category", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.DropDownList("AccountId", Web.Models.ListHelper.GetCategoryList(), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
